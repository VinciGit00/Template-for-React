{"ast":null,"code":"var _jsxFileName = \"/Users/marcovinciguerra/Desktop/react_boostrap/src/App.js\";\nimport logo from \"./logo.svg\";\nimport React, { Component } from \"react\"; //Non rappresenta documenti dinamicamente\n//function App() {\n//Funziona in modo dinamico e mi permette di mettere i props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      cards: [{\n        id: 0,\n        nome: \"California\",\n        prezzo: 1.99,\n        immagine: california,\n        quantità: 0\n      }, {\n        id: 1,\n        nome: \"dragon\",\n        prezzo: 2.5,\n        immagine: dragon,\n        quantità: 0\n      }, {\n        id: 2,\n        nome: \"dynamite\",\n        prezzo: 4.99,\n        immagine: dynamite,\n        quantità: 0\n      }, {\n        id: 3,\n        nome: \"philadelphia\",\n        prezzo: 1.39,\n        immagine: philadelphia,\n        quantità: 0\n      }, {\n        id: 4,\n        nome: \"rainbow\",\n        prezzo: 11.99,\n        immagine: rainbow,\n        quantità: 0\n      }, {\n        id: 5,\n        nome: \"shrimp\",\n        prezzo: 21.99,\n        immagine: shrimp,\n        quantità: 0\n      }]\n    };\n\n    this.handleDelete = cardId => {\n      //Filtra la listaw\n      const cards = this.state.cards.filter(card => card.id !== cardId); //Aggiornamento dello state\n      //Il primo cards indica quello dello state, il secondo indica la variabiles\n\n      this.setState({\n        cards: cards\n      });\n    };\n\n    this.handleIncrement = card => {\n      const cards = [...this.state.cards];\n      const id = cards.indexOf(card);\n      cards[id] = { ...card\n      };\n      cards[id].quantità++;\n      this.setState({\n        cards\n      });\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //Creazione della navbar\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Cosa desideri ordinare?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: this.state.cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n              //Passo il metodo per gestire\n              //Non passo il parametro perchè\n              //mi interessa solo il nome della funzione\n              //il parametro lo passo dentro alla card\n              onDelete: this.handleDelete //Passo tutto il componente che itero\n              ,\n              onIncrement: this.handleIncrement //card è l'oggetto intero che passo dentro al file\n              ,\n              card: card\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marcovinciguerra/Desktop/react_boostrap/src/App.js"],"names":["logo","React","Component","App","state","cards","id","nome","prezzo","immagine","california","quantità","dragon","dynamite","philadelphia","rainbow","shrimp","handleDelete","cardId","filter","card","setState","handleIncrement","indexOf","render","map"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\n//Non rappresenta documenti dinamicamente\n//function App() {\n\n//Funziona in modo dinamico e mi permette di mettere i props\nclass App extends Component {\n  state = {\n    cards: [\n      {\n        id: 0,\n        nome: \"California\",\n        prezzo: 1.99,\n        immagine: california,\n        quantità: 0,\n      },\n      { id: 1, nome: \"dragon\", prezzo: 2.5, immagine: dragon, quantità: 0 },\n      {\n        id: 2,\n        nome: \"dynamite\",\n        prezzo: 4.99,\n        immagine: dynamite,\n        quantità: 0,\n      },\n      {\n        id: 3,\n        nome: \"philadelphia\",\n        prezzo: 1.39,\n        immagine: philadelphia,\n        quantità: 0,\n      },\n      { id: 4, nome: \"rainbow\", prezzo: 11.99, immagine: rainbow, quantità: 0 },\n      { id: 5, nome: \"shrimp\", prezzo: 21.99, immagine: shrimp, quantità: 0 },\n    ],\n  };\n\n  //è una funzione di tipo globale\n  //cardId è l'oggetto che passo\n  handleDelete = (cardId) => {\n    //Filtra la listaw\n    const cards = this.state.cards.filter((card) => card.id !== cardId);\n    //Aggiornamento dello state\n    //Il primo cards indica quello dello state, il secondo indica la variabiles\n    this.setState({ cards: cards });\n  };\n\n  //card è l'oggetto che itero\n  handleIncrement = (card) => {\n    const cards = [...this.state.cards];\n    const id = cards.indexOf(card);\n    cards[id] = { ...card };\n    cards[id].quantità++;\n    this.setState({ cards });\n  };\n\n  render() {\n    return (\n      //Creazione della navbar\n      <>\n        <Navbar></Navbar>\n        <div className=\"Container\">\n          <h1>Cosa desideri ordinare?</h1>\n          <hr />\n          <div className=\"row\">\n            {this.state.cards.map((card) => (\n              <Card\n                key={card.id}\n                //Passo il metodo per gestire\n                //Non passo il parametro perchè\n                //mi interessa solo il nome della funzione\n                //il parametro lo passo dentro alla card\n                onDelete={this.handleDelete}\n                //Passo tutto il componente che itero\n                onIncrement={this.handleIncrement}\n                //card è l'oggetto intero che passo dentro al file\n                card={card}\n              ></Card>\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}